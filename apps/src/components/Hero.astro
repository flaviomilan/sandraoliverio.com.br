---
// Importando constantes
import { CONTACT, URLS } from '../constants';

// Construindo a URL do WhatsApp
const whatsappUrl = `${URLS.WHATSAPP_BASE}/${CONTACT.WHATSAPP.PHONE_NUMBER}`;
---

<section class="hero" aria-label="Banner principal">
  <div class="video-container">
    <video
      autoplay
      muted
      loop
      playsinline
      aria-hidden="true"
      preload="none"
      poster="/images/casamento.avif"
      data-astro-cid-bbe6dxrz
      loading="lazy"
      oncanplaythrough="this.style.opacity='1'"
      style="opacity: 0; transition: opacity 0.5s ease-in-out;"
    >
      <source src="/videos/hero-video.mp4" type="video/mp4" />

      <img
        src="/images/casamento.avif"
        alt="Cerimonial de casamento elegante"
        width="1920"
        height="1080"
        loading="eager"
        fetchpriority="high"
      />
    </video>
  </div>
  <div class="hero-overlay"></div>
  <div class="hero-content">
    <div class="decorative-element">
      <div class="accent-line"></div>
    </div>
    <h1><span class="highlight">Transformamos</span> sonhos em momentos inesquecíveis</h1>
    <div class="elegant-divider">
      <span></span>
      <div class="ornament"></div>
      <span></span>
    </div>
    <p>Criamos momentos únicos e sofisticados, onde cada detalhe reflete distinção e elegância.</p>
    <a href={whatsappUrl} target="_blank" rel="noopener noreferrer" class="btn-hero">
      <span>Reserve um atendimento personalizado</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="16"
        height="16"
        fill="currentColor"
        viewBox="0 0 16 16"
        aria-hidden="true"
        focusable="false"
      >
        <path
          fill-rule="evenodd"
          d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z"
        ></path>
      </svg>
    </a>
  </div>
</section>

<script>
  // Carrega o vídeo após a página carregar para não travar o loading inicial
  window.addEventListener('load', () => {
    const video = document.querySelector('.hero video');
    if (video) {
      // Define preload apenas após o load da página
      video.preload = 'auto';

      // Força o load do vídeo
      video.load();

      // Quando o vídeo estiver pronto para reproduzir, faz o fade in
      video.addEventListener('canplaythrough', () => {
        video.style.opacity = '1';
      });

      // Fallback: se demorar muito para carregar, remove o vídeo e mantém apenas o poster
      const loadTimeout = setTimeout(() => {
        if (video.readyState < 4) {
          // Se não carregou completamente
          video.style.display = 'none';
          console.log('Vídeo removido devido ao tempo limite de carregamento');
        }
      }, 5000); // 5 segundos timeout

      // Limpa o timeout se o vídeo carregar
      video.addEventListener('canplaythrough', () => {
        clearTimeout(loadTimeout);
      });
    }
  });
</script>

<style>
  .hero {
    position: relative;
    height: 95vh;
    min-height: 750px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    text-align: center;
    overflow: hidden;
  }

  .video-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    overflow: hidden;
  }

  .video-container video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    min-width: 100%;
    min-height: 100%;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(84, 84, 84, 0.35) 0%, rgba(0, 0, 0, 0.3) 100%);
    z-index: 1;
    backdrop-filter: blur(0.5px);
  }

  .hero-content {
    position: relative;
    z-index: 2;
    max-width: 900px;
    padding: 0 20px;
    animation: fadeIn 1.2s cubic-bezier(0.25, 0.8, 0.25, 1);
  }

  .hero-logo {
    margin-bottom: 30px;
  }

  .hero-logo img {
    max-width: 250px;
    height: auto;
    margin: 0 auto;
    filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.15));
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .decorative-element {
    position: relative;
    margin-bottom: 40px;
  }

  .accent-line {
    width: 70px;
    height: 1px;
    background: var(--color-taupe);
    margin: 0 auto;
    position: relative;
    opacity: 0.8;
  }

  .accent-line::before,
  .accent-line::after {
    content: '';
    position: absolute;
    height: 1px;
    background: var(--color-taupe);
    opacity: 0.6;
  }

  .accent-line::before {
    width: 25px;
    top: -10px;
    left: 50%;
    transform: translateX(-50%);
  }

  .accent-line::after {
    width: 25px;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
  }

  .hero h1 {
    font-family: var(--font-primary);
    font-size: 4.2rem;
    margin-bottom: 25px;
    line-height: 1.2;
    font-weight: 300;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);
    letter-spacing: var(--letter-spacing-elegant);
    color: white;
  }

  .hero h1 .highlight {
    position: relative;
    display: inline-block;
    font-style: italic;
    color: var(--color-taupe);
  }

  .elegant-divider {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 40px;
    width: 60%;
  }

  .elegant-divider span {
    flex-grow: 1;
    height: 1px;
    background: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.5));
  }

  .elegant-divider span:last-child {
    background: linear-gradient(to left, transparent, rgba(255, 255, 255, 0.5));
  }

  .elegant-divider .ornament {
    width: 6px;
    height: 6px;
    background-color: var(--color-taupe);
    transform: rotate(45deg);
    margin: 0 18px;
    position: relative;
    opacity: 0.8;
  }

  .hero p {
    font-size: 1.4rem;
    margin-bottom: 65px;
    max-width: 720px;
    margin-left: auto;
    margin-right: auto;
    font-weight: 300;
    letter-spacing: 0.05em;
    line-height: 1.8;
    color: rgba(255, 255, 255, 0.95);
    font-family: var(--font-primary);
  }

  .btn-hero {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
    padding: 18px 46px;
    background-color: transparent;
    border: 1px solid var(--color-button);
    color: white;
    text-decoration: none;
    border-radius: var(--border-radius);
    font-weight: 400;
    font-size: 0.85rem;
    text-transform: uppercase;
    letter-spacing: 3px;
    transition: all 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
    position: relative;
    z-index: 1;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  }

  .btn-hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 0%;
    height: 100%;
    background-color: var(--color-button);
    transition: all 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
    z-index: -1;
  }

  .btn-hero:hover::before {
    width: 100%;
  }

  .btn-hero:hover {
    color: white;
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.18);
    border-color: transparent;
  }

  .btn-hero svg {
    transition: transform 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
  }

  .btn-hero:hover svg {
    transform: translateX(8px);
  }

  @media (max-width: 768px) {
    .hero h1 {
      font-size: 3.2rem;
    }

    .hero p {
      font-size: 1.2rem;
    }

    .elegant-divider {
      width: 80%;
    }
  }

  @media (max-width: 480px) {
    .hero h1 {
      font-size: 2.4rem;
    }

    .hero p {
      font-size: 1.1rem;
    }

    .btn-hero {
      padding: 15px 35px;
      font-size: 0.8rem;
    }
  }
</style>
