---
export interface Props {
  src: string;
  alt: string;
  sizes: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  fetchpriority?: 'high' | 'low' | 'auto';
  class?: string;
}

const { src, alt, sizes, width, height, loading = 'lazy', fetchpriority = 'auto', class: className } = Astro.props;

// Generate srcset for different sizes based on the original image
const generateSrcSet = (baseSrc: string) => {
  const extension = baseSrc.split('.').pop();
  const baseName = baseSrc.replace(`.${extension}`, '');
  
  // Standard responsive sizes
  const widths = [320, 640, 768, 1024, 1280, 1600];
  
  return widths.map(w => `${baseName}-${w}w.${extension} ${w}w`).join(', ');
};

const srcset = generateSrcSet(src);
---

<img
  src={src}
  srcset={srcset}
  sizes={sizes}
  alt={alt}
  width={width}
  height={height}
  loading={loading}
  fetchpriority={fetchpriority}
  class={className}
  decoding="async"
/>